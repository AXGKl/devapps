{'1f8bd792643e46ad0dd3248c251fc2e6': [{'cmd': 'export init_at="$HOME/foo"; '
                                              'export log_level=30',
                                       'res': '$ export init_at="$HOME/foo"; '
                                              'export '
                                              'log_level=30                               \n'
                                              '$'},
                                      {'cmd': {'cmd': 'ops project -ia /tmp '
                                                      '--environ_flags',
                                               'timeout': 1},
                                       'res': '$ ops project -ia /tmp '
                                              '--environ_flags  \n'
                                              '\n'
                                              'Reconfiguring project directory '
                                              '/home/gk/foo                                    \n'
                                              '\n'
                                              'Conda resources into: '
                                              '/home/gk/miniconda3                                       \n'
                                              'Filesystem rscs into: '
                                              '/home/gk/miniconda3/fs                                    \n'
                                              'Unit files for:       '
                                              '-                 \n'
                                              '\n'
                                              'Resources:          \n'
                                              ' - \x1b[38;5;240mlc_tools [git '
                                              'fzf jq rg fd http htop '
                                              'tmux]\x1b[39m                                   \n'
                                              ' - \x1b[38;5;240mlc_tools_kf '
                                              '[rotatelogs]\x1b[39m             \n'
                                              ' - '
                                              '\x1b[38;5;240mredis_server\x1b[39m     \n'
                                              '\n'
                                              'Confirm [Y|q|d:details|f:force '
                                              'non interactive install]:'}],
 '270eb46cc446afe908d7ad13cfa94d85': [{'cmd': 'ops project -h',
                                       'res': '$ ops project -h\n'
                                              '\n'
                                              '\n'
                                              'Devapp Project Creation\n'
                                              '\n'
                                              'By providing the --init_at '
                                              '<project dir> switch we will '
                                              '(re-)initialize a project '
                                              'directory there, incl:\n'
                                              '\n'
                                              '- Installing available '
                                              'resources, like databases and '
                                              'tools within a given directory '
                                              '(conda_prefix)\n'
                                              '- Creating resource start '
                                              'wrappers in <project_dir>/bin\n'
                                              '- Creating a \n'
                                              '\n'
                                              'Privilege escalation is not '
                                              'required for any of these '
                                              'steps, your system remains '
                                              'unchanged, except <project_dir> '
                                              'and <conda_prefix>\n'
                                              '\n'
                                              'Main command line flags '
                                              '[matching '
                                              '\x1b[1;32mops_devapp.project\x1b[0m] '
                                              '(-hf for all flags):\n'
                                              '\x1b[0;32mappc    '
                                              '\x1b[1;33madd_post_process_cmd     '
                                              "\x1b[0;31m''\x1b[0;38;5;245m\n"
                                              'Add this to all commands which '
                                              'have systemd service units. '
                                              'Intended for output '
                                              'redirection. Not applied when '
                                              'stdout is a tty.\n'
                                              "Example: -appc='2>&1 | "
                                              'rotatelogs -e -n1 "$logfile" '
                                              "1M' ($logfile defined in "
                                              'wrapper -> use single quotes).\n'
                                              'Tip: Use rotatelogs only on '
                                              'powers of 10 - spotted problems '
                                              'with 200M. Use 100M or 1G in '
                                              'that case. \n'
                                              '\x1b[0;32mcp      '
                                              '\x1b[1;33mconda_prefix             '
                                              '\x1b[0;31mdefault\x1b[0;38;5;245m\n'
                                              '\n'
                                              '    Resources install location, '
                                              'except filesystem based ones. '
                                              'Env vars resolved.\n'
                                              '\n'
                                              '    Aliases:\n'
                                              '    - local|l: '
                                              '<project_dir>/conda\n'
                                              '    - default|d: '
                                              '$HOME/miniconda3 (default path '
                                              'of conda)\n'
                                              '    - current|c: Any current '
                                              'conda_prefix set when running.\n'
                                              '    \n'
                                              '    Note: Installing resources '
                                              'outside the project keeps the '
                                              'project relocatable and '
                                              'resources reusable for other '
                                              'products.\n'
                                              '     \n'
                                              '\x1b[0;32mdamsu   '
                                              '\x1b[1;33mdelete_all_matching_service_unit_files '
                                              "\x1b[0;31m''\x1b[0;38;5;245m\n"
                                              'This removes all matching unit '
                                              'files calling devapp service '
                                              'wrappers. Say "service" to '
                                              'match all \n'
                                              '\x1b[0;32memrf    '
                                              '\x1b[1;33medit_matching_resource_file '
                                              "\x1b[0;31m''\x1b[0;38;5;245m\n"
                                              'Open resource files in $EDITOR, '
                                              'matching given string in their '
                                              'content \n'
                                              '\x1b[0;32mf       '
                                              '\x1b[1;33mforce                    '
                                              '\x1b[0;31mFalse\x1b[0;38;5;245m\n'
                                              'Assume y on all questions. '
                                              'Required when started w/o a '
                                              'tty \n'
                                              '\x1b[0;32mfr      '
                                              '\x1b[1;33mforce_reinstall          '
                                              '\x1b[0;31mFalse\x1b[0;38;5;245m\n'
                                              'Do not only install resources '
                                              'detected uninstalled but '
                                              'reinstall all \n'
                                              '\x1b[0;32mfd      '
                                              '\x1b[1;33mfs_dir                   '
                                              '\x1b[0;31mdefault\x1b[0;38;5;245m\n'
                                              '\n'
                                              '    Filesystem based resource '
                                              'location. Env vars resolved.\n'
                                              '    Aliases:\n'
                                              '    - local|l: '
                                              '<project_dir>/fs\n'
                                              '    - default|d: '
                                              '$HOME/miniconda3/fs (default '
                                              'path of conda)\n'
                                              '    - conda|c: Within '
                                              'conda_prefix/fs\n'
                                              '     \n'
                                              '\x1b[0;32mia      '
                                              '\x1b[1;33minit_at                  '
                                              "\x1b[0;31m''\x1b[0;38;5;245m\n"
                                              'Set up project in given '
                                              'directory. env vars / relative '
                                              'dirs supported. \n'
                                              '\x1b[0;32micau    '
                                              '\x1b[1;33minit_create_all_units    '
                                              '\x1b[0;31mFalse\x1b[0;38;5;245m\n'
                                              'If set we create unit files for '
                                              'ALL service type resources \n'
                                              '\x1b[0;32micuf    '
                                              '\x1b[1;33minit_create_unit_files   '
                                              "\x1b[0;31m''\x1b[0;38;5;245m\n"
                                              'List service unit files you '
                                              'want to have created for '
                                              'systemctl --user.  '
                                              '\x1b[0;38;5;241m\n'
                                              'Valid: Entries in rsc.provides, '
                                              'rsc.cmd or rsc.exe (i.e. the '
                                              'filename of the wrapper in bin '
                                              'dir). Not: rsc.name.\n'
                                              '\x1b[0;32mirm     '
                                              '\x1b[1;33minit_resource_match      '
                                              "\x1b[0;31m''\x1b[0;38;5;245m\n"
                                              'Install only matching '
                                              'resources. Examples: -irm '
                                              '"redis, hub" or -irm \'!mysql, '
                                              "!redis' (! negates). \n"
                                              '\x1b[0;32mis      '
                                              '\x1b[1;33minstall_state            '
                                              '\x1b[0;31mFalse\x1b[0;38;5;245m\n'
                                              'show install state infos \n'
                                              '\x1b[0;32mlrf     '
                                              '\x1b[1;33mlist_resources_files     '
                                              '\x1b[0;31mFalse\x1b[0;38;5;245m\n'
                                              'Show available definition '
                                              'files. \n'
                                              '\x1b[0;32m        '
                                              '\x1b[1;33mlog_resources_fully      '
                                              '\x1b[0;31mFalse\x1b[0;38;5;245m\n'
                                              'Always output all settings of '
                                              'resources when logging \n'
                                              '\x1b[0m'}],
 '332c94208e75d06f9300006b3656ebcd': {'cmd': '$ cat /tmp/flagtest.py',
                                      'res': '#!/usr/bin/env python\n'
                                             'from devapp.app import app, '
                                             'run_app, FLG\n'
                                             '\n'
                                             'class Flags:\n'
                                             "    autoshort = '' # enabling "
                                             "shot forms, prefixed with '', "
                                             'i.e. not prefixed\n'
                                             '\n'
                                             '    class my_bool:\n'
                                             '        d = False\n'
                                             '\n'
                                             '    class my_float:\n'
                                             '        d = 1.1\n'
                                             '\n'
                                             '    class my_int:\n'
                                             '        d = 1\n'
                                             '\n'
                                             '    class my_multi_str:\n'
                                             "        t = 'multi_string'  # "
                                             'can supply more than once, any '
                                             'value\n'
                                             '\n'
                                             '    class my_list:\n'
                                             "        s = 'x'   # non auto "
                                             'short form\n'
                                             '        t = list  # comma sepped '
                                             'values into a list \n'
                                             "        d =  'foo, bar'\n"
                                             '\n'
                                             '    class my_opt:\n'
                                             "        t = ['foo', 'bar']  # "
                                             'can pick exactly one within the '
                                             'list (enum)\n'
                                             "        d =  'foo'\n"
                                             '\n'
                                             '    class my_opt_multi:\n'
                                             "        t = ('a', 'b', 'c') # "
                                             'now we can select more than one '
                                             'within the tuple (multi_enum)\n'
                                             "        d =  'a'\n"
                                             '\n'
                                             '    class my_str:\n'
                                             "        d = 'foo' # most easy "
                                             'way\n'
                                             '\n'
                                             '    class my_str_detailed:\n'
                                             "        '''Detailed help'''\n"
                                             "        n = '''Options "
                                             '(multiline help)\n'
                                             '        - opt1: foo\n'
                                             '        - opt2: bar\n'
                                             "        '''\n"
                                             '        s = False # disable '
                                             'short\n'
                                             "        d = 'opt1'\n"
                                             '\n'
                                             '\n'
                                             '\n'
                                             '# Print out all FLG vals.\n'
                                             '# Normal (global) app access '
                                             'e.g. like : if FLG.my_int > 42:\n'
                                             'flg = lambda: [(k, getattr(FLG, '
                                             'k)) for k in FLG if '
                                             "k.startswith('my_')]\n"
                                             "run = lambda: app.info('Flag "
                                             "values (CLI over defaults):', "
                                             'json=flg())\n'
                                             '\n'
                                             "if __name__ == '__main__':\n"
                                             '    # supplying the flags '
                                             'keyword implicitly calls '
                                             'devapp.tools.define_flags on '
                                             'them:\n'
                                             '    run_app(run, flags=Flags)\n'},
 '87d3d0162b76bea51f8f632eada25582': [{'cmd': '/tmp/flagtest.py -h',
                                       'res': '$ /tmp/flagtest.py -h\n'
                                              '\x1b[1;34m__main__\n'
                                              '\x1b[0;32mmb    '
                                              '\x1b[1;33mmy_bool                                              '
                                              '\x1b[0;31mFalse                                   '
                                              '\x1b[0;38;5;245mMy_bool                                                                                                                                                                \n'
                                              '\x1b[0;32mmf    '
                                              '\x1b[1;33mmy_float                                             '
                                              '\x1b[0;31m1.1                                     '
                                              '\x1b[0;38;5;245mMy_float                                                                                                                                                               \n'
                                              '\x1b[0;32mmi    '
                                              '\x1b[1;33mmy_int                                               '
                                              '\x1b[0;31m1                                       '
                                              '\x1b[0;38;5;245mMy_int                                                                                                                                                                 \n'
                                              '\x1b[0;32mx     '
                                              '\x1b[1;33mmy_list                                              '
                                              '\x1b[0;31mfoo,bar                                 '
                                              '\x1b[0;38;5;245mMy_list                                                                                                                                                                \n'
                                              '\x1b[0;32mmms   '
                                              '\x1b[1;33mmy_multi_str                                         '
                                              "\x1b[0;31m['']                                    "
                                              '\x1b[0;38;5;245mMy_multi_str;\n'
                                              '    repeat this option to '
                                              'specify a list of '
                                              'values                                                                                                       \n'
                                              '\x1b[0;32mmo    '
                                              '\x1b[1;33mmy_opt                                               '
                                              '\x1b[0;31mfoo                                     '
                                              '\x1b[0;38;5;245mMy_opt\x1b[0;38m '
                                              '[__main__,my_opt,mo,<foo|bar>: '
                                              'My_opt,foo,foo,string '
                                              'enum,foo,bar]                                                                                       \n'
                                              '\x1b[0;32mmom   '
                                              '\x1b[1;33mmy_opt_multi                                         '
                                              "\x1b[0;31m['a']                                   "
                                              '\x1b[0;38;5;245mMy_opt_multi;\n'
                                              '    repeat this option to '
                                              'specify a list of '
                                              'values                                                                                                       \n'
                                              '\x1b[0;32mms    '
                                              '\x1b[1;33mmy_str                                               '
                                              '\x1b[0;31mfoo                                     '
                                              '\x1b[0;38;5;245mMy_str                                                                                                                                                                 \n'
                                              '\x1b[0;32m      '
                                              '\x1b[1;33mmy_str_detailed                                      '
                                              '\x1b[0;31mopt1                                    '
                                              '\x1b[0;38;5;245mOptions '
                                              '(multiline help)\n'
                                              '        - opt1: foo\n'
                                              '        - opt2: bar\n'
                                              '         \x1b[0;38;5;241m\n'
                                              'Detailed '
                                              'help                                                                  \n'
                                              '\x1b[0m'},
                                      {'cmd': '/tmp/flagtest.py -mo baz || '
                                              'true',
                                       'res': '$ /tmp/flagtest.py -mo baz || '
                                              'true\n'
                                              'FATAL Flags parsing error: flag '
                                              '--my_opt=baz: value should be '
                                              'one of <foo|bar>\n'
                                              'Pass --helpshort or --helpfull '
                                              'to see help on flags.'},
                                      {'cmd': '/tmp/flagtest.py -ms a -mb -mf '
                                              '42.1 -mi 42 -mms a -mms b -mo '
                                              'bar -mom b -mom c -x a,b -ms b '
                                              '-lf plain',
                                       'res': '$ /tmp/flagtest.py -ms a -mb '
                                              '-mf 42.1 -mi 42 -mms a -mms b '
                                              '-mo bar -mom b -mom c -x a,b '
                                              '-ms b -lf plain\n'
                                              '03-03 15:05:53\x1b[0m [info     '
                                              '\x1b[0m] Flag values (CLI over '
                                              'defaults):\x1b[0m '
                                              '[flagtest\x1b[0m] '
                                              'json\x1b[0m=\x1b[0m[\x1b[90m\x1b[39;49;00m\n'
                                              '\x1b[90m  '
                                              '\x1b[39;49;00m[\x1b[90m\x1b[39;49;00m\n'
                                              '\x1b[90m    '
                                              '\x1b[39;49;00m\x1b[33m"my_list"\x1b[39;49;00m,\x1b[90m\x1b[39;49;00m\n'
                                              '\x1b[90m    '
                                              '\x1b[39;49;00m[\x1b[90m\x1b[39;49;00m\n'
                                              '\x1b[90m      '
                                              '\x1b[39;49;00m\x1b[33m"a"\x1b[39;49;00m,\x1b[90m\x1b[39;49;00m\n'
                                              '\x1b[90m      '
                                              '\x1b[39;49;00m\x1b[33m"b"\x1b[39;49;00m\x1b[90m\x1b[39;49;00m\n'
                                              '\x1b[90m    '
                                              '\x1b[39;49;00m]\x1b[90m\x1b[39;49;00m\n'
                                              '\x1b[90m  '
                                              '\x1b[39;49;00m],\x1b[90m\x1b[39;49;00m\n'
                                              '\x1b[90m  '
                                              '\x1b[39;49;00m[\x1b[90m\x1b[39;49;00m\n'
                                              '\x1b[90m    '
                                              '\x1b[39;49;00m\x1b[33m"my_bool"\x1b[39;49;00m,\x1b[90m\x1b[39;49;00m\n'
                                              '\x1b[90m    '
                                              '\x1b[39;49;00m\x1b[94mtrue\x1b[39;49;00m\x1b[90m\x1b[39;49;00m\n'
                                              '\x1b[90m  '
                                              '\x1b[39;49;00m],\x1b[90m\x1b[39;49;00m\n'
                                              '\x1b[90m  '
                                              '\x1b[39;49;00m[\x1b[90m\x1b[39;49;00m\n'
                                              '\x1b[90m    '
                                              '\x1b[39;49;00m\x1b[33m"my_float"\x1b[39;49;00m,\x1b[90m\x1b[39;49;00m\n'
                                              '\x1b[90m    '
                                              '\x1b[39;49;00m\x1b[94m42.1\x1b[39;49;00m\x1b[90m\x1b[39;49;00m\n'
                                              '\x1b[90m  '
                                              '\x1b[39;49;00m],\x1b[90m\x1b[39;49;00m\n'
                                              '\x1b[90m  '
                                              '\x1b[39;49;00m[\x1b[90m\x1b[39;49;00m\n'
                                              '\x1b[90m    '
                                              '\x1b[39;49;00m\x1b[33m"my_int"\x1b[39;49;00m,\x1b[90m\x1b[39;49;00m\n'
                                              '\x1b[90m    '
                                              '\x1b[39;49;00m\x1b[94m42\x1b[39;49;00m\x1b[90m\x1b[39;49;00m\n'
                                              '\x1b[90m  '
                                              '\x1b[39;49;00m],\x1b[90m\x1b[39;49;00m\n'
                                              '\x1b[90m  '
                                              '\x1b[39;49;00m[\x1b[90m\x1b[39;49;00m\n'
                                              '\x1b[90m    '
                                              '\x1b[39;49;00m\x1b[33m"my_multi_str"\x1b[39;49;00m,\x1b[90m\x1b[39;49;00m\n'
                                              '\x1b[90m    '
                                              '\x1b[39;49;00m[\x1b[90m\x1b[39;49;00m\n'
                                              '\x1b[90m      '
                                              '\x1b[39;49;00m\x1b[33m"a"\x1b[39;49;00m,\x1b[90m\x1b[39;49;00m\n'
                                              '\x1b[90m      '
                                              '\x1b[39;49;00m\x1b[33m"b"\x1b[39;49;00m\x1b[90m\x1b[39;49;00m\n'
                                              '\x1b[90m    '
                                              '\x1b[39;49;00m]\x1b[90m\x1b[39;49;00m\n'
                                              '\x1b[90m  '
                                              '\x1b[39;49;00m],\x1b[90m\x1b[39;49;00m\n'
                                              '\x1b[90m  '
                                              '\x1b[39;49;00m[\x1b[90m\x1b[39;49;00m\n'
                                              '\x1b[90m    '
                                              '\x1b[39;49;00m\x1b[33m"my_opt"\x1b[39;49;00m,\x1b[90m\x1b[39;49;00m\n'
                                              '\x1b[90m    '
                                              '\x1b[39;49;00m\x1b[33m"bar"\x1b[39;49;00m\x1b[90m\x1b[39;49;00m\n'
                                              '\x1b[90m  '
                                              '\x1b[39;49;00m],\x1b[90m\x1b[39;49;00m\n'
                                              '\x1b[90m  '
                                              '\x1b[39;49;00m[\x1b[90m\x1b[39;49;00m\n'
                                              '\x1b[90m    '
                                              '\x1b[39;49;00m\x1b[33m"my_opt_multi"\x1b[39;49;00m,\x1b[90m\x1b[39;49;00m\n'
                                              '\x1b[90m    '
                                              '\x1b[39;49;00m[\x1b[90m\x1b[39;49;00m\n'
                                              '\x1b[90m      '
                                              '\x1b[39;49;00m\x1b[33m"b"\x1b[39;49;00m,\x1b[90m\x1b[39;49;00m\n'
                                              '\x1b[90m      '
                                              '\x1b[39;49;00m\x1b[33m"c"\x1b[39;49;00m\x1b[90m\x1b[39;49;00m\n'
                                              '\x1b[90m    '
                                              '\x1b[39;49;00m]\x1b[90m\x1b[39;49;00m\n'
                                              '\x1b[90m  '
                                              '\x1b[39;49;00m],\x1b[90m\x1b[39;49;00m\n'
                                              '\x1b[90m  '
                                              '\x1b[39;49;00m[\x1b[90m\x1b[39;49;00m\n'
                                              '\x1b[90m    '
                                              '\x1b[39;49;00m\x1b[33m"my_str"\x1b[39;49;00m,\x1b[90m\x1b[39;49;00m\n'
                                              '\x1b[90m    '
                                              '\x1b[39;49;00m\x1b[33m"b"\x1b[39;49;00m\x1b[90m\x1b[39;49;00m\n'
                                              '\x1b[90m  '
                                              '\x1b[39;49;00m],\x1b[90m\x1b[39;49;00m\n'
                                              '\x1b[90m  '
                                              '\x1b[39;49;00m[\x1b[90m\x1b[39;49;00m\n'
                                              '\x1b[90m    '
                                              '\x1b[39;49;00m\x1b[33m"my_str_detailed"\x1b[39;49;00m,\x1b[90m\x1b[39;49;00m\n'
                                              '\x1b[90m    '
                                              '\x1b[39;49;00m\x1b[33m"opt1"\x1b[39;49;00m\x1b[90m\x1b[39;49;00m\n'
                                              '\x1b[90m  '
                                              '\x1b[39;49;00m]\x1b[90m\x1b[39;49;00m\n'
                                              ']\x1b[90m\x1b[39;49;00m\n'
                                              '\x1b[0m'}],
 'e82349d9e9fbb3693746605d6b811308': [{'cmd': 'ops project -hf log | grep -A '
                                              "100 'All supported'",
                                       'res': '$ ops project -hf log | grep -A '
                                              "100 'All supported'\n"
                                              'All supported command line '
                                              'flags [matching '
                                              '\x1b[1;32mlog\x1b[0m]:\n'
                                              '\x1b[1;34mabsl.logging\n'
                                              '\x1b[0;32m        '
                                              '\x1b[1;33malsologtostderr          '
                                              '\x1b[0;31mFalse\x1b[0;38;5;245m\n'
                                              'also log to stderr? \n'
                                              '\x1b[0;32m        '
                                              '\x1b[1;33mlog_dir                  '
                                              "\x1b[0;31m''\x1b[0;38;5;245m\n"
                                              'directory to write logfiles '
                                              'into \n'
                                              '\x1b[0;32m        '
                                              '\x1b[1;33mlogger_levels            '
                                              "\x1b[0;31m''\x1b[0;38;5;245m\n"
                                              'Specify log level of loggers. '
                                              'The format is a CSV list of '
                                              '`name:level`. Where `name` is '
                                              'the logger name used with '
                                              '`logging.getLogger()`, and '
                                              '`level` is a level name  (INFO, '
                                              'DEBUG, etc). e.g. '
                                              '`myapp.foo:INFO,other.logger:DEBUG` \n'
                                              '\x1b[0;32m        '
                                              '\x1b[1;33mlogtostderr              '
                                              '\x1b[0;31mFalse\x1b[0;38;5;245m\n'
                                              'Should only log to stderr? \n'
                                              '\x1b[0;32m        '
                                              '\x1b[1;33mshowprefixforinfo        '
                                              '\x1b[0;31mTrue\x1b[0;38;5;245m\n'
                                              'If False, do not prepend prefix '
                                              "to info messages when it's "
                                              'logged to stderr, --verbosity '
                                              'is set to INFO level, and '
                                              'python logging is used. \n'
                                              '\x1b[0;32m        '
                                              '\x1b[1;33mstderrthreshold          '
                                              '\x1b[0;31mfatal\x1b[0;38;5;245m\n'
                                              'log messages at this level, or '
                                              'more severe, to stderr in '
                                              'addition to the logfile.  '
                                              "Possible values are 'debug', "
                                              "'info', 'warning', 'error', and "
                                              "'fatal'.  Obsoletes "
                                              '--alsologtostderr. Using '
                                              '--alsologtostderr cancels the '
                                              'effect of this flag. Please '
                                              'also note that this flag is '
                                              'subject to --verbosity and '
                                              'requires logfile not be '
                                              'stderr. \n'
                                              '\x1b[0;32mv       '
                                              '\x1b[1;33mverbosity                '
                                              '\x1b[0;31m-1\x1b[0;38;5;245m\n'
                                              'Logging verbosity level. '
                                              'Messages logged at this level '
                                              'or lower will be included. Set '
                                              'to 1 for debug logging. If the '
                                              'flag was not set or supplied, '
                                              'the value will be changed from '
                                              'the default of -1 (warning) to '
                                              '0 (info) after flags are '
                                              'parsed. \n'
                                              '\x1b[1;34mdevapp.tools\n'
                                              '\x1b[0;32mdasdi   '
                                              '\x1b[1;33msensitive_data_identifiers '
                                              '\x1b[0;31mpass.*|.*secret.*\x1b[0;38;5;245m\n'
                                              'Regexp which helps identify '
                                              'keys carrying sensitive '
                                              'information (for filtering out '
                                              'of logs). Case insensitive '
                                              'matching. \n'
                                              '\x1b[1;34mstructlogging.sl\n'
                                              '\x1b[0;32mlatn    '
                                              '\x1b[1;33mlog_add_thread_name      '
                                              '\x1b[0;31mFalse\x1b[0;38;5;245m\n'
                                              'Add name of thread \n'
                                              '\x1b[0;32mldcs    '
                                              '\x1b[1;33mlog_dev_coljson_style    '
                                              '\x1b[0;31mdark\x1b[0;38;5;245m\n'
                                              'Pygments style for colorized '
                                              'json. To use the 16 base colors '
                                              'and leave it to the terminal '
                                              'palette how to render choose '
                                              'light or dark \x1b[0;38m '
                                              '[structlogging.sl,log_dev_coljson_style,ldcs,<abap|algol|algol_nu|arduino|autumn|borland|bw|colorful|dark|default|dracula|emacs|friendly|friendly_grayscale|fruity|gruvbox-dark|gruvbox-light|igor|inkpot|light|lilypond|lovelace|manni|material|monokai|murphy|native|one-dark|paraiso-dark|paraiso-light|pastie|perldoc|rainbow_dash|rrt|sas|solarized-dark|solarized-light|stata|stata-dark|stata-light|tango|trac|vim|vs|xcode|zenburn>: '
                                              'Pygments style for colorized '
                                              'json. To use the 16 base colors '
                                              'and leave it to the terminal '
                                              'palette how to render choose '
                                              'light or dark,dark,dark,string '
                                              'enum,abap,algol,algol_nu,arduino,autumn,borland,bw,colorful,dark,default,dracula,emacs,friendly,friendly_grayscale,fruity,gruvbox-dark,gruvbox-light,igor,inkpot,light,lilypond,lovelace,manni,material,monokai,murphy,native,one-dark,paraiso-dark,paraiso-light,pastie,perldoc,rainbow_dash,rrt,sas,solarized-dark,solarized-light,stata,stata-dark,stata-light,tango,trac,vim,vs,xcode,zenburn]\n'
                                              '\x1b[0;32mldfc    '
                                              '\x1b[1;33mlog_dev_fmt_coljson      '
                                              '\x1b[0;31mjson,payload\x1b[0;38;5;245m\n'
                                              'List of keys to log as json. \n'
                                              '\x1b[0;32mlf      '
                                              '\x1b[1;33mlog_fmt                  '
                                              '\x1b[0;31mauto\x1b[0;38;5;245m\n'
                                              'Force a log format. 0: off, 1: '
                                              'auto, 2: plain, 3: '
                                              'plain_no_colors, 4: json. Note: '
                                              'This value can be set away from '
                                              'auto via export log_fmt as '
                                              'well. \n'
                                              '\x1b[0;32mll      '
                                              '\x1b[1;33mlog_level                '
                                              '\x1b[0;31m20\x1b[0;38;5;245m\n'
                                              'Log level (10: debug, 20: info, '
                                              '...). You may also say '
                                              'log_level=error \n'
                                              '\x1b[0;32mltf     '
                                              '\x1b[1;33mlog_time_fmt             '
                                              '\x1b[0;31m%m-%d '
                                              '%H:%M:%S\x1b[0;38;5;245m\n'
                                              'Log time format. Shortcuts: '
                                              '"ISO", "dt" \n'
                                              '\x1b[1;34mops_devapp.project\n'
                                              '\x1b[0;32mappc    '
                                              '\x1b[1;33madd_post_process_cmd     '
                                              "\x1b[0;31m''\x1b[0;38;5;245m\n"
                                              'Add this to all commands which '
                                              'have systemd service units. '
                                              'Intended for output '
                                              'redirection. Not applied when '
                                              'stdout is a tty.\n'
                                              "Example: -appc='2>&1 | "
                                              'rotatelogs -e -n1 "$logfile" '
                                              "1M' ($logfile defined in "
                                              'wrapper -> use single quotes).\n'
                                              'Tip: Use rotatelogs only on '
                                              'powers of 10 - spotted problems '
                                              'with 200M. Use 100M or 1G in '
                                              'that case. \n'
                                              '\x1b[0;32m        '
                                              '\x1b[1;33mlog_resources_fully      '
                                              '\x1b[0;31mFalse\x1b[0;38;5;245m\n'
                                              'Always output all settings of '
                                              'resources when logging \n'
                                              '\x1b[0m'}]}